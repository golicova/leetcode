-------------------
trapping rain water
-------------------

example
-------
input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
output: 6
explanation: the above elevation map (black section) is represented by 
array [0,1,0,2,1,0,1,3,2,1,2,1]
in this case, 6 units of rain water (blue section) are being trapped

constrains: 
n == height.length
1 <= n <= 2 * 104
0 <= height[i] <= 105

pseudocode
----------
good explanation: https://www.youtube.com/watch?v=ZI2z5pq0TqA

solution
--------
class Solution {
    public int trap(int[] height) {
        if(height.length == 0) return 0; 
        
        int left = 0, right = height.length - 1; 
        int leftMax = height[left];
        int rightMax = height[right];
        int result = 0; 
        
        while(left < right) {
            if (leftMax < rightMax) {
                left++; 
                leftMax = Math.max(leftMax, height[left]);
                if(leftMax - height[left] < 0) {
                    result = 0; 
                } else {
                    result += leftMax - height[left];
                }
            }
            
            else {
                right--; 
                rightMax = Math.max(rightMax, height[right]);
                if(rightMax - height[right] < 0) {
                    result = 0;
                }
                result += rightMax - height[right];
            }
        }
        return result; 
    }
}
